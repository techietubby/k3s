---
- name: Configure K3s master
  hosts:
    - k3s
  become: true
  become_method: sudo

  pre_tasks:

  - name: Enable SELinux
    selinux:
      policy:         targeted
      state:          enforcing

  - name: Start services chronyd and firewalld
    service:
      name:           "{{ item }}"
      enabled:        yes
      state:          restarted
    with_items:
      - chronyd
      - firewalld

  - name: Increase max files for root
    pam_limits:
      domain:         root
      limit_type:     '-'
      limit_item:     nofile
      value:          "16384"

  - name: Add firewall rules
    firewalld:
      port:           "{{ item.port }}/{{ item.protocol }}"
      permanent:      yes
      immediate:      yes
      state:          enabled
    with_items:
    - "{{ firewall_rule }}"

  - name: Create /etc/hosts.allow
    ansible.builtin.template:
      src:            hosts_allow.j2
      dest:           /etc/hosts.allow
      owner:          root
      group:          root
      setype:         net_conf_t
      mode:           0644

  - name: Create /etc/hosts.deny
    ansible.builtin.template:
      src:            hosts_deny.j2
      dest:           /etc/hosts.deny
      owner:          root
      group:          root
      setype:         net_conf_t
      mode:           0644

  - name: Append shm options to /etc/fstab
    lineinfile:
      dest:           /etc/fstab
      line:           "tmpfs      /dev/shm    tmpfs   defaults,noexec,nodev,nosuid   0 0"
      regexp:         "^tmpfs"
      owner:          root
      state:          present
      insertafter:    EOF
      create:         True

  - name: yum-clean-metadata
    command:          yum clean metadata
    args:
      warn:           no

  - name: Add EPEL repository
    yum:
      name:           epel-release
      state:          present
    ignore_errors: true

  - name: Install Extra packages
    yum:
      name:           "{{ packages }}"
      state:           latest
      disable_gpg_check: yes
      update_cache:    yes
    vars:
      packages:
      - audispd-plugins
      - cockpit
      - chrony
      - fail2ban
      - fail2ban-firewalld
      - git
      - jq
      - libreswan
      - lsof
      - lynis
      - opensc
      - pcsc-lite
      - psacct
      - rhel-system-roles
      - rkhunter
      - rng-tools
      - tree
      - vsftpd
      - yum-utils

  - name: Update password hashing algorithm
    shell: authconfig --passalgo=sha512 --update

  tasks:

  - name: Copy /etc/crontab
    ansible.builtin.copy:
      src:             files/crontab
      dest:            /etc/crontab
      owner:           root
      group:           root
      mode:            '0644'
      setype:          system_cron_spool_t

  - name: Copy /etc/fail2ban/jail.d/sshd.local
    ansible.builtin.copy:
      src:             files/sshd.local
      dest:            /etc/fail2ban/jail.d/sshd.local
      owner:           root
      group:           root
      mode:            '0600'
      setype:          etc_t

  - name: Copy /etc/issue
    ansible.builtin.copy:
      src:             files/issue.net
      dest:            "{{ item }}"
      owner:           root
      group:           root
      mode:            '0644'
      setype:          etc_t
    with_items:
      - /etc/issue
      - /etc/issue.net

  - name: Copy /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
    ansible.builtin.copy:
      src:             files/RPM-GPG-KEY-redhat-release
      dest:            /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
      owner:           root
      group:           root
      mode:            '0644'
      setype:          cert_t

  - name: Copy /etc/modprobe.d/CIS_Security.conf
    ansible.builtin.copy:
      src:             files/modprobe.d-disable-bluetooth.conf
      dest:            /etc/modprobe.d/CIS_Security.conf
      owner:           root
      group:           root
      mode:            '0644'
      setype:          modules_conf_t

  - name: Copy /etc/modprobe.d/disable-bluetooth.conf
    ansible.builtin.copy:
      src:             files/modprobe.d-disable-bluetooth.conf
      dest:            /etc/modprobe.d/disable-bluetooth.conf
      owner:           root
      group:           root
      mode:            '0644'
      setype:          modules_conf_t

  - name: Copy /etc/issue.net
    ansible.builtin.copy:
      src:             files/issue.net
      dest:            /etc/issue.net
      owner:           root
      group:           root
      mode:            '0644'
      setype:          etc_t

  - name: Copy /etc/sysctl.conf
    ansible.builtin.copy:
      src:             files/sysctl.conf
      dest:            /etc/sysctl.conf
      owner:           root
      group:           root
      mode:            '0644'
      setype:          system_conf_t

  - name: Copy /etc/security/limits.conf
    ansible.builtin.copy:
      src:             files/security_limits.conf
      dest:            /etc/security/limits.conf
      owner:           root
      group:           root
      mode:            '0644'
      setype:          etc_t

  - name: Disable Cockpit service
    ansible.builtin.service:
      name:            cockpit.socket
      state:           stopped
      enabled:         no

  - name: Enable Process Accouting
    ansible.builtin.service:
      name:            psacct
      state:           started
      enabled:         yes

  - name: Import Redhat GPG key
    shell: rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release

  - name: Enable RNGD service
    service:
      name:            rngd
      enabled:         true
      state:           started

  - name: Enable Fail2ban service
    service:
      name:            fail2ban
      enabled:         true
      state:           started

  - name: Update /home mount options
    ansible.posix.mount:
      path:            /home
      state:           remounted
      opts:            defaults,nodev,nosuid

  - name: Update /tmp mount options
    ansible.posix.mount:
      path:            /tmp
      state:           remounted
      opts:            defaults,nodev,nosuid

  - name: Update /var/log mount options
    ansible.posix.mount:
      path:            /var/log
      state:           remounted
      opts:            defaults,nodev,nosuid,noexec

  - name: Update /var/log/audit mount options
    ansible.posix.mount:
      path:            /var/log/audit
      state:           present
      opts:            defaults,nodev,nosuid,noexec
    ignore_errors:     true

  - name: Enable auditing
    include_tasks: enable_auditing.yml

  - name: Harden Pam
    include_tasks: harden_pam.yml

  - name: Harden SSH
    include_tasks: harden_ssh.yml

  - name: Update RPM permssions
    include_tasks: fix_rpm.yml

  roles:
    - role: aide
    - role: postfix
    - role: openscap
    - role: system

    - role: k3s
      when: kubernetes_role == "master"
      #when: inventory_hostname == "k3s.persephone.local"

    - role: k3s-worker
      when: kubernetes_role == "worker"
      #when: inventory_hostname == "k3s-worker1.persephone.local" or inventory_hostname == "k3s-worker2.persephone.local" or "k3s-worker3.persephone.local"

  post_tasks:
    - block:
      - name: Post_tasks | Update /etc/rkhunter.conf
        lineinfile:
          path:     /etc/rkhunter.conf
          regexp:   "^ALLOW_SSH_ROOT_USER="
          insertafter:  "^ALLOW_SSH_ROOT_USER="
          line:     "ALLOW_SSH_ROOT_USER=no"
          state:    present
          create:   true

      - name: Post_tasks | Create RKHunter log directory
        file:
          path:     /var/log/rkhunter
          owner:    root
          group:    root
          mode:     "0775"
          state:    directory

      - name: Post_tasks | Create RKHunter log file
        file:
          path:     /var/log/rkhunter/rkhunter.log
          owner:    root
          group:    root
          mode:     "0644"
          state:    touch

      - name: Post_tasks | Create RKHunter baseline
        shell:      rkhunter --propupd

      - name: Post_tasks | Fix world-writeable files
        shell: find / -xdev -type f -perm -002 -exec chmod o-w {} \;

      - name: Post_tasks | Rebuild man-page database
        shell: mandb -c

      - name: Post_tasks | Update mlocate database
        shell: /usr/bin/updatedb

    - name: Post_tasks | Restore SELinux labels on filesystem tree
      command:      /sbin/restorecon -R -v /
      ignore_errors: true
...
