---
- name: Create user group
  ansible.builtin.group:
    name:     "{{ k3s_group }}"
    state:    present
    gid:      "{{ k3s_gid }}"

- name: Create user
  ansible.builtin.user:
    name:     "{{ k3s_user }}"
    shell:    /bin/bash
    createhome: yes
    comment:  Kubernetes Admin
    uid:      "{{ k3s_uid }}"
    group:    k3s
    password: "{{ k3s_passwd | password_hash('sha512') }}"
    state:    present

- name: Create a 2048-bit SSH key for user k3s in ~k3s/.ssh/id_rsa
  ansible.builtin.user:
    name:     k3s
    generate_ssh_key: yes
    ssh_key_bits:     2048
    ssh_key_file:     /home/{{ k3s_user }}/.ssh/id_rsa

- name: Create sudoers file for {{ k3s_user }}
  ansible.builtin.template:
    src:      templates/sudoers.j2
    dest:     /etc/sudoers.d/{{ k3s_user }}
    owner:    root
    group:    root
    mode:     '0400'

- name: Create /home/{{ k3s_user }}/.kube
  ansible.builtin.file:
    path:     /home/{{ k3s_user }}/.kube
    state:    directory
    mode:     '0750'

- name: Create /etc/sysctl.d/k8s.conf
  ansible.builtin.copy:
    src:      files/k8s.conf
    dest:     /etc/sysctl.d/k8s.conf
    owner:    root
    group:    root
    mode:     '0644'

- name: Create /etc/sysctl.d/99-kubernetes-cri.conf
  ansible.builtin.copy:
    src:      files/99-kubernetes-cri.conf
    dest:     /etc/sysctl.d/99-kubernetes-cri.conf
    owner:    root
    group:    root
    mode:     '0644'

- name: Create /etc/modules-load.d/containerd.conf
  ansible.builtin.copy:
    src:      files/containerd.conf
    dest:     /etc/modules-load.d/containerd.conf
    owner:    root
    group:    root
    mode:     '0644'

- name: Load K3s kernel modules
  shell:
       modprobe overlay
       modprobe br_netfilter

- name: Copy K3s node-token from ansible-host
  ansible.builtin.copy:
    src:      /tmp/node-token
    dest:     /tmp/node-token
    owner:    root
    group:    root
    mode:     '0644'

- name: Register K3s node-token
  command:    /bin/cat /tmp/node-token
  register:   node_token

- name: Install latest version of K3s
  shell:

       TOKEN="{{ node_token.stdout }}"
       curl -sfL https://get.k3s.io | K3S_URL=https://{{ master_ip }}:6443 K3S_TOKEN={{ node_token.stdout }} sh -

- name: Install K3s SELinux packages
  yum:
    name:     "{{ packages }}"
    state:    latest
    update_cache: yes
  vars:
    packages:
    - container-selinux
    - selinux-policy-base
    #- k3s-selinux

#- name: Modify K3s systemctl unit file (Enable SELinux)
#  ansible.builtin.lineinfile:
#    path:     /etc/systemd/system/k3s.service
#    regexp:   '^    server \\'
#    line:     '    server --selinux \'
#    owner:    root
#    group:    root
#    mode:     '0644'
    
#- name: Modify K3s systemctl unit file (Disable servicelb)
#  ansible.builtin.lineinfile:
#    path: /etc/systemd/system/k3s.service
#    insertafter: '^    server --selinux \\'
#    line: '    --disable servicelb'
#    owner:    root
#    group:    root
#    mode:     '0644'
#  notify:
#  - Restart k3s

- name: Install bash-completion
  yum:
    name:     bash-completion
    state:    latest

- name: Get latest stable version of kubectl
  get_url:
    url:      https://dl.k8s.io/release/stable.txt
    dest:     /tmp/version.txt
    mode:     '0644'

- name: Print to screen google authenticator details
  command:    /bin/cat /tmp/version.txt
  register:   version

- name: Update kubectl to latest stable version
  get_url:
    url: https://dl.k8s.io/release/{{ version.stdout }}/bin/linux/amd64/kubectl
    dest:     /usr/local/bin/kubectl
    mode:     '0555'

- name: Configure Kubectl bash-completion
  shell:      /usr/local/bin/kubectl completion bash > /etc/bash_completion.d/kubectl

- name: Create Kubeconfig for K3s user
  ansible.builtin.template:
    src:      templates/k3s_sh.j2
    dest:     /home/{{ k3s_user }}
    owner:    "{{ k3s_user }}"
    group:    "{{ k3s_group }}"
    mode:     '0755'

...
